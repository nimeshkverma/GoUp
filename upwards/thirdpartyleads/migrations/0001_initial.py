# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-05-12 20:08
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import thirdpartyleads.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ThirdPartyLead',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('third_party_lead_id', models.AutoField(primary_key=True, serialize=False)),
                ('lead_source', models.CharField(choices=[('rubique', 'rubique'), ('others', 'others')], default='rubique', max_length=50)),
                ('leads_first_name', models.CharField(max_length=25, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('leads_last_name', models.CharField(max_length=25, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Male', max_length=50)),
                ('fathers_first_name', models.CharField(blank=True, max_length=25, null=True, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('fathers_last_name', models.CharField(blank=True, default='', max_length=25, null=True, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('mothers_first_name', models.CharField(blank=True, default='', max_length=25, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('mothers_last_name', models.CharField(blank=True, default='', max_length=25, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('dob', models.DateField()),
                ('current_address_line1', models.CharField(max_length=256)),
                ('current_address_line2', models.CharField(max_length=256)),
                ('current_city', models.CharField(max_length=25)),
                ('current_state', models.CharField(blank=True, max_length=25, null=True)),
                ('current_pincode', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(message="Pincode must be entered in format: '123456'. 6 Characters allowed.", regex='^[1-9][0-9]{5}$')])),
                ('permanent_address_line1', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('permanent_address_line2', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('permanent_city', models.CharField(blank=True, default='', max_length=25, null=True)),
                ('permanent_state', models.CharField(blank=True, default='', max_length=25, null=True)),
                ('permanent_pincode', models.CharField(blank=True, default='', max_length=6, null=True, validators=[django.core.validators.RegexValidator(message="Pincode must be entered in format: '123456'. 6 Characters allowed.", regex='^[1-9][0-9]{5}$')])),
                ('aadhaar', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message="AADHAAR must be entered in the format: '123456789123'. 12 digits allowed.", regex='^\\d{12}$')])),
                ('aadhaar_mob_no', models.CharField(blank=True, default='', max_length=12, validators=[django.core.validators.RegexValidator(message="Mobile number must be entered in the format: '9999999999'. 10 digits allowed.", regex='^$|\\d{10}$')])),
                ('alternate_mob_no', models.CharField(blank=True, default='', max_length=12, validators=[django.core.validators.RegexValidator(message="Mobile number must be entered in the format: '9999999999'. 10 digits allowed.", regex='^$|\\d{10}$')])),
                ('landline_no_office', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Data must be entered in Digits only.', regex='[0-9]+')])),
                ('landline_no_residence', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator(message='Data must be entered in Digits only.', regex='[0-9]+')])),
                ('personal_email', models.EmailField(max_length=254)),
                ('pan', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message="PAN must be entered in the format: 'ABCDE1234F'. 10 Characters allowed.", regex='[a-zA-Z]{5}\\d{4}[a-zA-Z]{1}')])),
                ('employement_type', models.CharField(choices=[('salaried', 'salaried'), ('self_employed', 'self_employed'), ('others', 'others')], max_length=50)),
                ('employer', models.CharField(max_length=256)),
                ('employer_type', models.CharField(choices=[('private', 'private'), ('proprietor', 'proprietor'), ('government', 'government'), ('other', 'other')], max_length=50)),
                ('profession_type', models.CharField(choices=[('Doctor', 'Doctor'), ('Chatered Accountant', 'Chatered Accountant'), ('Company Secretary', 'Company Secretary'), ('Consultant', 'Consultant'), ('Architect', 'Architect'), ('Lawyer', 'Lawyer'), ('Teacher', 'Teacher'), ('Other', 'Other')], default='Other', max_length=50)),
                ('designation', models.CharField(max_length=50)),
                ('company_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('department', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('monthly_salary', models.IntegerField()),
                ('office_city', models.CharField(max_length=50)),
                ('current_company_experience', models.IntegerField()),
                ('total_experience', models.IntegerField()),
                ('highest_qualification', models.CharField(blank=True, max_length=25, null=True)),
                ('highest_qualification_completion_year', models.IntegerField(blank=True, choices=[(1950, 1950), (1951, 1951), (1952, 1952), (1953, 1953), (1954, 1954), (1955, 1955), (1956, 1956), (1957, 1957), (1958, 1958), (1959, 1959), (1960, 1960), (1961, 1961), (1962, 1962), (1963, 1963), (1964, 1964), (1965, 1965), (1966, 1966), (1967, 1967), (1968, 1968), (1969, 1969), (1970, 1970), (1971, 1971), (1972, 1972), (1973, 1973), (1974, 1974), (1975, 1975), (1976, 1976), (1977, 1977), (1978, 1978), (1979, 1979), (1980, 1980), (1981, 1981), (1982, 1982), (1983, 1983), (1984, 1984), (1985, 1985), (1986, 1986), (1987, 1987), (1988, 1988), (1989, 1989), (1990, 1990), (1991, 1991), (1992, 1992), (1993, 1993), (1994, 1994), (1995, 1995), (1996, 1996), (1997, 1997), (1998, 1998), (1999, 1999), (2000, 2000), (2001, 2001), (2002, 2002), (2003, 2003), (2004, 2004), (2005, 2005), (2006, 2006), (2007, 2007), (2008, 2008), (2009, 2009), (2010, 2010), (2011, 2011), (2012, 2012), (2013, 2013), (2014, 2014), (2015, 2015), (2016, 2016), (2017, 2017)], null=True)),
                ('highest_qualification_college', models.CharField(blank=True, default='', max_length=256)),
                ('active_loans', models.IntegerField(blank=True, default=0, null=True)),
                ('primary_bank_account_number', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('primary_bank_account_holder_name', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('primary_bank_name', models.CharField(default='', max_length=256)),
                ('primary_bank_ifsc', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('cheque_bounced_3', models.BooleanField(default=False)),
                ('existing_loans', models.BooleanField(default=False)),
                ('accommodation_type', models.CharField(choices=[('Owned', 'Owned'), ('Rented', 'Rented'), ('Company Provided', 'Company Provided'), ('Paying Guest', 'Paying Guest'), ('Ancestral Property', 'Ancestral Property'), ('Resicum Office', 'Resicum Office')], default='Rented', max_length=50)),
                ('mode_of_salary', models.CharField(choices=[('Bank account transfer', 'Bank account transfer'), ('Cheque payment', 'Cheque payment'), ('Cash payment', 'Cash payment')], default='Bank account transfer', max_length=50)),
                ('current_residence_years', models.IntegerField(default=0)),
                ('marital_status', models.CharField(choices=[('married', 'married'), ('single', 'single'), ('divorced', 'divorced'), ('separated', 'separated')], default='single', max_length=50)),
                ('loan_tenure', models.IntegerField(default=0)),
                ('loan_amount_required', models.IntegerField(default=0)),
                ('nationality', models.CharField(choices=[('Indian', 'Indian'), ('NRI', 'NRI'), ('Others', 'Others')], default='Indian', max_length=50)),
            ],
            options={
                'db_table': 'third_party_lead',
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyLeadDocuments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('document_type', models.CharField(choices=[('aadhaar', 'aadhaar'), ('pan', 'pan'), ('current_address_proof', 'current_address_proof'), ('income_proof', 'income_proof'), ('bank_statement', 'bank_statement'), ('passport_pic', 'passport_pic')], default='aadhaar', max_length=50)),
                ('document_1', models.FileField(upload_to=thirdpartyleads.models.content_file_name)),
                ('document_2', models.FileField(blank=True, null=True, upload_to=thirdpartyleads.models.content_file_name)),
                ('document_3', models.FileField(blank=True, null=True, upload_to=thirdpartyleads.models.content_file_name)),
                ('document_4', models.FileField(blank=True, null=True, upload_to=thirdpartyleads.models.content_file_name)),
                ('document_5', models.FileField(blank=True, null=True, upload_to=thirdpartyleads.models.content_file_name)),
                ('document_6', models.FileField(blank=True, null=True, upload_to=thirdpartyleads.models.content_file_name)),
                ('status', models.CharField(choices=[('uploaded', 'uploaded'), ('verified', 'verified')], default='uploaded', max_length=50)),
                ('third_party_lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='thirdpartyleads.ThirdPartyLead')),
            ],
            options={
                'db_table': 'third_party_lead_documents',
            },
        ),
        migrations.AlterUniqueTogether(
            name='thirdpartyleaddocuments',
            unique_together=set([('third_party_lead', 'document_type')]),
        ),
    ]

# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-05-12 20:08
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aadhaar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('aadhaar', models.CharField(blank=True, max_length=12, validators=[django.core.validators.RegexValidator(message="AADHAAR must be entered in the format: '123456789123'. 12 digits allowed.", regex='^\\d{12}$')])),
                ('aadhaar_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('is_verified', models.BooleanField(default=False)),
                ('first_name', models.CharField(blank=True, max_length=25, null=True, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='[a-zA-Z ]+')])),
                ('first_name_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('last_name', models.CharField(blank=True, max_length=25, null=True, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='[a-zA-Z ]+')])),
                ('last_name_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('father_first_name', models.CharField(blank=True, default='', max_length=25, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('father_first_name_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('father_last_name', models.CharField(blank=True, default='', max_length=25, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('father_last_name_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('mother_first_name', models.CharField(blank=True, default='', max_length=25, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('mother_first_name_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('mother_last_name', models.CharField(blank=True, default='', max_length=25, validators=[django.core.validators.RegexValidator(message='Data must be entered in Alphabets only.', regex='$|[a-zA-Z]+')])),
                ('mother_last_name_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('dob', models.DateField(blank=True, null=True)),
                ('dob_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Male', max_length=25, null=True)),
                ('gender_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('mobile_no', models.CharField(blank=True, max_length=12, validators=[django.core.validators.RegexValidator(message="Mobile number must be entered in the format: '9999999999'. 10 digits allowed.", regex='^$|\\d{10}$')])),
                ('mobile_no_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('permanent_address_line1', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('permanent_address_line1_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('permanent_address_line2', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('permanent_address_line2_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('permanent_city', models.CharField(blank=True, max_length=25, null=True)),
                ('permanent_city_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('permanent_state', models.CharField(blank=True, max_length=25, null=True)),
                ('permanent_state_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('permanent_pincode', models.CharField(blank=True, max_length=6, null=True, validators=[django.core.validators.RegexValidator(message="Pincode must be entered in format: '123456'. 6 Characters allowed.", regex='^[1-9][0-9]{5}$')])),
                ('permanent_pincode_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('pic_link', models.URLField(blank=True, null=True)),
                ('pic_link_source', models.CharField(blank=True, choices=[('ekyc', 'EKYC'), ('upwards', 'Upwards')], default='upwards', max_length=25)),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='customer.Customer')),
            ],
            options={
                'db_table': 'customer_aadhaar',
            },
        ),
    ]
